<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 1.定义实例化KafkaConsumer的参数 -->
	<bean id="consumerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="${bootstrap.servers}" />
				<entry key="group.id" value="${group.id}" />
				<entry key="enable.auto.commit" value="${enable.auto.commit}" />
				<entry key="auto.commit.interval.ms" value="${auto.commit.interval.ms}" />
				<entry key="key.deserializer" value="${key.deserializer}"/>  
                <entry key="value.deserializer" value="${value.deserializer}"/>  
			</map>
		</constructor-arg>
	</bean>

	<!-- 2.创建consumerFactory -->
	<bean id="consumerFactory"
		class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
		<constructor-arg>
			<ref bean="consumerProperties" />
		</constructor-arg>
	</bean>

	<!-- 3.装配消息监听器，实现消费者具体业务处理逻辑-->
	<bean id="consumerListener" class="com.kafka.action.chapter7.spring.consumer.SpringKafkaConsumerListener" />

	<!-- 4.消费者容器配置信息 -->
	<bean id="containerProperties"
		class="org.springframework.kafka.listener.config.ContainerProperties">
		<!-- 可以指定多个主题，支持正则表达式形式 -->
		<constructor-arg value="${defaultTopic}" />
		<property name="messageListener" ref="consumerListener" />
	</bean>

	<!-- 5.创建一个支持多线程的Listener容器 -->
	<bean id="messageListenerContainer"
		class="org.springframework.kafka.listener.ConcurrentMessageListenerContainer"
		init-method="doStart">
		<constructor-arg ref="consumerFactory" />
		<constructor-arg ref="containerProperties" />
		<!-- 指定线程数 -->
		<property name="concurrency" value="${concurrency}"></property>
	</bean>
</beans>  