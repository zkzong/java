<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/context 
	 http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:sentinel/sentinel.properties"/>
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="${redis.adapter.maxIdle}"/>
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${redis.adapter.minIdle}"/>
        <!-- 在获取连接的时候检查有效性 -->
        <property name="testOnBorrow" value="${redis.adapter.testOnBorrow}"/>
        <!-- return 一个jedis实例给pool时，是否检查连接可用性 （ping()） -->
        <property name="testOnReturn" value="${redis.adapter.testOnReturn}"/>
        <!-- idle状态监测用异步线程evict进行检查， -->
        <property name="testWhileIdle" value="${redis.adapter.testWhileIdle}"/>
        <!-- 一次最多evict的pool里的jedis实例个数 -->
        <property name="numTestsPerEvictionRun" value="${redis.adapter.numTestsPerEvictionRun}"/>
        <!-- test idle 线程的时间间隔 -->
        <property name="timeBetweenEvictionRunsMillis" value="${redis.adapter.timeBetweenEvictionRunsMillis}"/>
    </bean>

    <bean id="sentinelConfig"
          class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <!-- master属性很重要，其值请按照运维分配的名称填写 -->
        <constructor-arg name="master" value="${redis.adapter.masterName}"/>
        <!-- sentinel的ip和端口列表（开发环境三个值一致） -->
        <constructor-arg name="sentinelHostAndPorts">
            <set>
                <!--<value>192.168.3.9:26379</value>-->
                <value>${redis.adapter.sentinel1}</value>
                <value>${redis.adapter.sentinel2}</value>
                <value>${redis.adapter.sentinel3}</value>
            </set>
        </constructor-arg>
    </bean>

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg ref="sentinelConfig"/>
        <constructor-arg ref="jedisPoolConfig"/>
        <!--<property name="password" value="${redis.sentinel.password}"/>-->
    </bean>

    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>

    <bean id="redisUtil" class="com.zkzong.redis.RedisUtil">
        <constructor-arg name="redisTemplate" ref="redisTemplate"/>
    </bean>

</beans>